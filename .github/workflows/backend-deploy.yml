name: Build and Push Backend Image

on:
  push:
    branches:
      - main
      - filter-optimization
    paths:
      - 'backend/**'
      - '.github/workflows/backend-deploy.yml'
  workflow_dispatch:
    inputs:
      deploy_manually:
        description: 'Deploy manually after build'
        required: false
        default: false
        type: boolean

env:
  PYTHON_VERSION: '3.11'
  WORKING_DIRECTORY: ./backend
  AZURE_CONTAINER_REGISTRY: jssapmscr
  IMAGE_NAME: backend
  AZURE_WEBAPP_NAME: jscbbackend01  # Replace with your actual Azure WebApp name
  AZURE_RESOURCE_GROUP: js-sapservices-tools  # Replace with your actual resource group name

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Generate unique image tag
        id: tag
        run: |
          SHA_SHORT=$(echo ${{ github.sha }} | cut -c1-7)
          TIMESTAMP=$(date -u +"%Y%m%d%H%M%S")
          # Using the step output is more reliable than environment variables
          echo "unique_tag=${SHA_SHORT}-${TIMESTAMP}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push container image (with inline caching)
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.WORKING_DIRECTORY }}
          push: true
          tags: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.unique_tag }}
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          # --- ONE-TIME: Disable build cache for clean build ---
          no-cache: true
          # cache-from: type=registry,ref=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          # --- END ONE-TIME CHANGE ---

      - name: Output Deployment Information
        run: |
          echo "::notice::Image built and pushed successfully!"
          echo "::notice::Image Tag: ${{ steps.tag.outputs.unique_tag }}"
          echo "::notice::Full Image Name: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.unique_tag }}"
          echo "::notice::To deploy this image, run the following Azure CLI commands:"
          echo "::notice::az webapp config container set --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group YOUR_RESOURCE_GROUP \""
          echo "::notice::  --docker-custom-image-name ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.unique_tag }} \""
          echo "::notice::  --docker-registry-server-url https://${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io \""
          echo "::notice::  --docker-registry-server-user YOUR_REGISTRY_USERNAME \""
          echo "::notice::  --docker-registry-server-password YOUR_REGISTRY_PASSWORD"
          echo "::notice::az webapp restart --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group YOUR_RESOURCE_GROUP"

          # Create a tag.txt file in the artifacts
          mkdir -p deployment-info
          echo "${{ steps.tag.outputs.unique_tag }}" > deployment-info/tag.txt
          echo "${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.unique_tag }}" > deployment-info/image.txt

      - name: Upload Deployment Info
        uses: actions/upload-artifact@v3
        with:
          name: deployment-info
          path: deployment-info/
          retention-days: 30

      - name: Login to Azure
        if: github.event.inputs.deploy_manually == 'true'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Update Azure WebApp Configuration
        if: github.event.inputs.deploy_manually == 'true'
        uses: azure/CLI@v1
        with:
          inlineScript: |
            # Update the webapp to use the new image tag
            az webapp config container set --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --docker-custom-image-name ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.unique_tag }} \
              --docker-registry-server-url https://${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io \
              --docker-registry-server-user ${{ secrets.REGISTRY_USERNAME }} \
              --docker-registry-server-password ${{ secrets.REGISTRY_PASSWORD }}
            
            # Restart the webapp to apply changes
            az webapp restart --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }}